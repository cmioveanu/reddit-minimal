[{"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/Posts.js":"1","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/comments/Comments.js":"2","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/postFooter/PostFooter.js":"3","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/header/searchBar/SearchBar.js":"4","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/header/Header.js":"5","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/app/utils.js":"6","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/likes/Likes.js":"7","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/header/searchBar/searchBarSlice.js":"8","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/app/store.js":"9","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/individualPost/individualPostSlice.js":"10","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/App.js":"11","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/individualPost/IndividualPost.js":"12","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/postsSlice.js":"13"},{"size":1984,"mtime":1607557291501,"results":"14","hashOfConfig":"15"},{"size":1193,"mtime":1607557532994,"results":"16","hashOfConfig":"15"},{"size":2799,"mtime":1607557349949,"results":"17","hashOfConfig":"15"},{"size":776,"mtime":1607523734919,"results":"18","hashOfConfig":"15"},{"size":726,"mtime":1607557557159,"results":"19","hashOfConfig":"15"},{"size":1456,"mtime":1607520366811,"results":"20","hashOfConfig":"15"},{"size":1876,"mtime":1607524005660,"results":"21","hashOfConfig":"15"},{"size":344,"mtime":1607523688821,"results":"22","hashOfConfig":"15"},{"size":532,"mtime":1607551943372,"results":"23","hashOfConfig":"15"},{"size":358,"mtime":1607552647632,"results":"24","hashOfConfig":"15"},{"size":1400,"mtime":1607557616740,"results":"25","hashOfConfig":"15"},{"size":1433,"mtime":1607557552659,"results":"26","hashOfConfig":"15"},{"size":307,"mtime":1607551857264,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1n8s2ol",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/Posts.js",["56"],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/comments/Comments.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/postFooter/PostFooter.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/header/searchBar/SearchBar.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/header/Header.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/app/utils.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/likes/Likes.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/header/searchBar/searchBarSlice.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/app/store.js",["57"],"import { configureStore } from '@reduxjs/toolkit';\r\nimport searchBarSlice from '../features/header/searchBar/searchBarSlice';\r\nimport subredditsSlice from '../features/subreddits/subredditsSlice';\r\nimport individualPostSlice from '../features/posts/individualPost/individualPostSlice';\r\nimport postsSlice from '../features/posts/postsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    search: searchBarSlice,\r\n    posts: postsSlice,\r\n    subreddits: subredditsSlice,\r\n    individualPostId: individualPostSlice\r\n  }\r\n});\r\n","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/individualPost/individualPostSlice.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/App.js",["58","59","60"],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/individualPost/IndividualPost.js",["61","62"],"import React from 'react';\r\nimport styles from './IndividualPost.module.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { PostFooter } from '../postFooter/PostFooter';\r\nimport { Likes } from '../likes/Likes';\r\n\r\n\r\nexport const IndividualPost = () => {\r\n    const posts = useSelector(state => state.posts);\r\n    const activePostId = useSelector(state => state.individualPostId);\r\n\r\n    const selectedPost = posts.filter(post => post.name === activePostId);\r\n\r\n    return (\r\n        <section className={styles.posts}>\r\n            {selectedPost.map(post => (\r\n\r\n                <section className={styles.post} key={post.id}>\r\n                    <Likes postUps={post.ups} />\r\n\r\n                    <div className={styles.postBody}>\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.selftext}</p>\r\n                            <img src={post.url} onError={(e) => e.target.style.display = \"none\"} />\r\n\r\n                        <PostFooter postId={post.id}\r\n                            postAuthor={post.author}\r\n                            postCreated={post.created_utc}\r\n                            postPermalink={post.permalink}\r\n                            postComments={post.num_comments}\r\n                            visible={true}\r\n                        />\r\n                    </div>\r\n                </section>\r\n\r\n            ))}\r\n        </section>\r\n    );\r\n}","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/postsSlice.js",[],{"ruleId":"63","severity":1,"message":"64","line":33,"column":29,"nodeType":"65","endLine":33,"endColumn":100},{"ruleId":"66","severity":1,"message":"67","line":12,"column":5,"nodeType":"68","messageId":"69","endLine":12,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":6,"column":3,"nodeType":"72","messageId":"73","endLine":6,"endColumn":7},{"ruleId":"70","severity":1,"message":"74","line":11,"column":8,"nodeType":"72","messageId":"73","endLine":11,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":31,"column":9,"nodeType":"77","endLine":31,"endColumn":20,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"79","line":4,"column":23,"nodeType":"72","messageId":"73","endLine":4,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":27,"column":29,"nodeType":"65","endLine":27,"endColumn":100},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'posts'.","ObjectExpression","unexpected","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'useDispatch' is defined but never used.",{"desc":"81","fix":"82"},"Update the dependencies array to be: [activeSub, dispatch]",{"range":"83","text":"84"},[934,945],"[activeSub, dispatch]"]