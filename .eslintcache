[{"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/Posts.js":"1","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/comments/Comments.js":"2","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/postFooter/PostFooter.js":"3"},{"size":1599,"mtime":1607359875702,"results":"4","hashOfConfig":"5"},{"size":938,"mtime":1607359851833,"results":"6","hashOfConfig":"5"},{"size":1612,"mtime":1607359725673,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1n8s2ol",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/Posts.js",["15","16","17","18"],"import React from 'react';\r\nimport styles from './Posts.module.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getSubredditPosts } from '../../app/Reddit';\r\n\r\n\r\nimport {PostFooter} from './postFooter/PostFooter';\r\n\r\n\r\n\r\nexport const Posts = () => {\r\n    const activeSub = useSelector(state => state.subreddits.activeSubreddit);\r\n    const dispatch = useDispatch();\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => getSubredditPosts(activeSub)\r\n        .then(response => {\r\n            setPosts(response);\r\n        }), [activeSub]);\r\n\r\n    \r\n\r\n    const [clicked, setClicked] = useState(true);\r\n\r\n    \r\n\r\n    return (\r\n        <section className={styles.posts}>\r\n            {posts.map(post => (\r\n                <section className={styles.post} key={post.id}>\r\n                    <div className={styles.likes}>\r\n                        {post.ups}\r\n                    </div>\r\n                    <div className={styles.postBody}>\r\n                        <h2>{post.title}</h2>\r\n                        <img src={post.url} onError={(e) => e.target.style.display = \"none\"} />\r\n                        <PostFooter postId={post.id} postAuthor={post.author} postCreated={post.created} postPermalink={post.permalink} postComments={post.num_comments}/>\r\n                    </div>\r\n                </section>\r\n                //likes + like & dislike button, time posted, comment number, author profile photo, post image if any\r\n                //post.url\r\n\r\n\r\n\r\n            ))}\r\n        </section>\r\n    );\r\n}","/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/comments/Comments.js",[],"/mnt/c/Users/Cristian/desktop/projects/reddit-client/src/features/posts/postFooter/PostFooter.js",[],{"ruleId":"19","severity":1,"message":"20","line":16,"column":11,"nodeType":"21","messageId":"22","endLine":16,"endColumn":19},{"ruleId":"19","severity":1,"message":"23","line":27,"column":12,"nodeType":"21","messageId":"22","endLine":27,"endColumn":19},{"ruleId":"19","severity":1,"message":"24","line":27,"column":21,"nodeType":"21","messageId":"22","endLine":27,"endColumn":31},{"ruleId":"25","severity":1,"message":"26","line":40,"column":25,"nodeType":"27","endLine":40,"endColumn":96},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]